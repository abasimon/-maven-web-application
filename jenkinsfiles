pipeline{
  agent any 
  tools {
    maven "maven 3.8.6"
  }  
  stages {
    stage('1GetCode'){
      steps{
        sh "echo 'cloning the latest application version' "
        git credentialsId: 'GitHub Credentials', url: 'https://github.com/abasimon/-maven-web-application.git'
      }
    }
    stage('3Test+Build'){
      steps{
        sh "echo 'running JUnit-test-cases' "
        sh "echo 'testing must passed to create artifacts ' "
        sh "mvn clean package"
      }
    }
    stage('4CodeQuality'){
      steps{
        sh "echo 'Perfoming CodeQualityAnalysis' "
        sh "mvn sonar:sonar"
      }
    }
    stage('5uploadNexus'){
      steps{
        sh "mvn deploy"
      }
    } 
    stage('8deploy2prod'){
      steps{
       deploy adapters: [tomcat9(credentialsId: 'tomcat', path: '', url: 'http://3.94.114.208:8177/')], contextPath: null, war: 'target/*war'
      }
    }
}
  post{
    always{
      emailext body: '''Hey guys
Please check build status.

Thanks 
Simon Aba from Landmark.''', recipientProviders: [buildUser(), developers()], subject: 'success', to: 'abasimon90@gmail.com '
    }
    success{
      emailext body: '''Hey guys,
Good job build deployment is successful.

Thanks 
Simon Aba from Landmark.''', recipientProviders: [buildUser(), developers()], subject: 'success', to: 'abasimon90@gmail.com '
    } 
    failure{
      emailext body: '''Hey guys
Build failed. Please resolve issues.

Thanks 
Simon Aba from Landmark.''', recipientProviders: [buildUser(), developers()], subject: 'success', to: 'abasimon90@gmail.com '
    }
  } 
}
